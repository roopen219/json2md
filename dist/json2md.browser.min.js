var e={};const t=e={};let r=e=>(t,r)=>"#".repeat(e)+" "+r(t),n=(e,t,r)=>{let a=e;return("string"==typeof e&&(a=e.split("\n")),r)?a.length<=1?a.join("\n"):a[0]+"\n"+n(a.slice(1),t,!1):a.map(e=>" ".repeat(t)+e).join("\n")},a=e=>{let t={strong:"**",italic:"*",underline:"_",strikethrough:"~~",code:"`"};return e.toString().replace(/<\/?strong\>/gi,t.strong).replace(/<\/?bold\>/gi,t.strong).replace(/<\/?em\>/gi,t.italic).replace(/<\/?italic\>/gi,t.italic).replace(/<\/?u\>/gi,t.underline).replace(/<\/?strike\>/gi,t.strikethrough).replace(/<\/?code\>/gi,t.code)};// Headings
t.h1=r(1),t.h2=r(2),t.h3=r(3),t.h4=r(4),t.h5=r(5),t.h6=r(6),t.blockquote=(e,t)=>t(a(e),"> "),t.img=(e,r)=>Array.isArray(e)?r(e,"","img"):"string"==typeof e?t.img({source:e,title:"",alt:""}):(e.title=e.title||"",e.alt=e.alt||"","!["+e.alt+"]("+e.source+' "'+e.title+'")'),t.ul=(e,t)=>{let r="";for(let i=0;i<e.length;++i){let l="",o=Object.keys(e[i])[0];"ul"!==o&&"ol"!==o&&"taskLists"!==o&&(l+="\n - "),r+=l+a(n(t(e[i]),4,!0))}return r},t.ol=(e,t)=>{let r="",i=0;for(let l=0;l<e.length;++l){let o="",s=Object.keys(e[l])[0];"ul"!==s&&"ol"!==s&&"taskLists"!==s?o="\n "+(l+1-i)+". ":i++,r+=o+a(n(t(e[l]),4,!0))}return r},t.taskLists=(e,t)=>{let r="";for(let i=0;i<e.length;++i){let l="",o=Object.keys(e[i])[0];"ul"!==o&&"ol"!==o&&"taskLists"!==o&&(l+=e[i].isDone?"\n - [x] ":"\n - [ ] "),r+=l+a(n(t(e[i].title||e[i]),4,!0))}return r},t.code=(e,t)=>{let r="```"+(e.language||"")+"\n";return Array.isArray(e.content)?r+=e.content.join("\n"):r+=e.content,r+="\n```"},t.p=(e,t)=>a(t(e,"\n")),t.table=(e,t)=>{let r={CENTER:"center",RIGHT:"right",LEFT:"left",NONE:"none"},n={[r.CENTER]:3,[r.RIGHT]:2,[r.LEFT]:2,[r.NONE]:1};if("object"!=typeof e||!e.hasOwnProperty("headers")||!e.hasOwnProperty("rows"))return"";let i=e.headers.map((t,n)=>e.aligns&&e.aligns[n]?e.aligns[n]:r.NONE),l=e.headers.map((e,t)=>Math.max(n[i[t]],e.length-2));!0===e.pretty&&e.rows.forEach(t=>{(Array.isArray(t)?t:e.headers.map(e=>t[e])).forEach((e,t)=>{l[t]=Math.max(l[t],e.length-2)})});let o=function(e,t){return" ".repeat(e)+t},s=function(e,t){return t+" ".repeat(e)},c=function(e,t){return" ".repeat(Math.floor(e/2))+t+" ".repeat(Math.ceil(e/2))},u=(e,t)=>{let n=l[t]+2-e.length;switch(i[t]){case r.RIGHT:return o(n,e);case r.NONE:case r.LEFT:return s(n,e);case r.CENTER:default:return c(n,e)}},h=e.headers.map((e,t)=>{let n=l[t]+2-e.length;switch(i[t]){case r.RIGHT:return o(n,e);case r.LEFT:return s(n,e);case r.CENTER:case r.NONE:default:return c(n,e)}}),p="| "+h.join(" | ")+" |",f="| "+e.headers.map((e,t)=>{let n="-".repeat(l[t]);switch(i[t]){case r.CENTER:return":"+n+":";case r.RIGHT:return"-"+n+":";case r.LEFT:return":"+n+"-";case r.NONE:default:return"-"+n+"-"}}).join(" | ")+" |",g=(t,r)=>!0!==e.pretty?t:u(t,r),y=e.rows.map(r=>"| "+(Array.isArray(r)?r:e.headers.map(e=>r[e])).map(e=>t(e)).map(e=>a(e)).map(e=>e.replace(/([^\\])\|/,"$1\\|")).map(e=>e.trim()).map(g).join(" | ")+" |").join("\n");return[p,f,y].join("\n")},t.link=(e,r)=>Array.isArray(e)?r(e,"","link"):"string"==typeof e?t.link({source:e,title:""}):"["+e.title+"]("+e.source+")",t.hr=(e,t)=>"---";var i={};function l(t,r,n){if(r=r||"","string"==typeof t||"number"==typeof t)return i(t,1,r);let a=[];// Handle arrays
if(Array.isArray(t)){for(let e=0;e<t.length;++e)a.push(i(l(t[e],"",n),1,r));return a.join("\n")}if(n){let a="",o=e[n||type];if("function"==typeof o)a+=i(o(n?t:t[type],l),1,r)+"\n";else throw Error("There is no such converter: "+type);return a}{let a="";return Object.keys(t).forEach((o,s,c)=>{let u=e[n||o];if("function"==typeof u)a+=i(u(n?t:t[o],l),1,r)+"\n";else throw Error("There is no such converter: "+o)}),a}}i=/**
 * indento
 * Indents the input string.
 *
 * @name indento
 * @function
 * @param {String} input The input string.
 * @param {Number} width The indent width.
 * @param {String} char The character to use for indentation (default: `" "`).
 * @return {String} The indented string.
 */function(e,t,r){return r="string"!=typeof r?" ":r,String(e).replace(/^/gm,r.repeat(t))},l.async=(t,r,n)=>Promise.resolve().then(()=>{if(r=r||"","string"==typeof t||"number"==typeof t)return i(t,1,r);let a=[];if(Array.isArray(t)){let e=t.map((e,t)=>Promise.resolve().then(()=>l.async(e,"",n)).then(e=>i(e,1,r)).then(e=>{a[t]=e}));return Promise.all(e).then(()=>a.join("\n"))}{let a=Object.keys(t)[0],o=e[n||a];if("function"==typeof o)return Promise.resolve().then(()=>o(n?t:t[a],l)).then(e=>i(e,1,r)+"\n");throw Error("There is no such converter: "+a)}}),l.converters=e,module.exports=l;//# sourceMappingURL=json2md.browser.min.js.map

//# sourceMappingURL=json2md.browser.min.js.map
